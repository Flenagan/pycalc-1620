# Form implementation generated from reading ui file 'final_design2.ui'
#
# Created by: PyQt6 UI code generator 6.7.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

#GUI for the calculator and a controller in the form of a function that updates the display.

from logic import CalcLogic
from PyQt6 import QtCore, QtGui, QtWidgets

class Ui_MainCWindow(object):


    #UI function from pyqt6
    def setupUi(self, MainCWindow)  -> None:
        """
        The visual GUI code component of the application.
         Generated from pyqt6, built with qt designer.
        :param MainCWindow:
        :return:
        """

        #Bunch of stuff for the GUI below, I didn't want to label it all.
        #It's all really obvious to be honest.
        MainCWindow.setObjectName("MainCWindow")
        MainCWindow.resize(401, 531)
        MainCWindow.setMinimumSize(QtCore.QSize(401, 531))
        MainCWindow.setMaximumSize(QtCore.QSize(401, 531))


        self.centralwidget = QtWidgets.QWidget(parent=MainCWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.zero_num = QtWidgets.QPushButton(parent=self.centralwidget)
        self.zero_num.setGeometry(QtCore.QRect(10, 450, 51, 41))
        self.zero_num.setObjectName("zero_num")

        self.decimal_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.decimal_button.setGeometry(QtCore.QRect(70, 450, 51, 41))
        self.decimal_button.setObjectName("decimal_button")

        self.minus_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.minus_button.setGeometry(QtCore.QRect(130, 450, 51, 41))
        self.minus_button.setObjectName("minus_button")

        self.two_num = QtWidgets.QPushButton(parent=self.centralwidget)
        self.two_num.setGeometry(QtCore.QRect(70, 400, 51, 41))
        self.two_num.setObjectName("two_num")

        self.one_num = QtWidgets.QPushButton(parent=self.centralwidget)
        self.one_num.setGeometry(QtCore.QRect(10, 400, 51, 41))
        self.one_num.setObjectName("one_num")

        self.three_num = QtWidgets.QPushButton(parent=self.centralwidget)
        self.three_num.setGeometry(QtCore.QRect(130, 400, 51, 41))
        self.three_num.setObjectName("three_num")

        self.five_num = QtWidgets.QPushButton(parent=self.centralwidget)
        self.five_num.setGeometry(QtCore.QRect(70, 350, 51, 41))
        self.five_num.setObjectName("five_num")

        self.four_num = QtWidgets.QPushButton(parent=self.centralwidget)
        self.four_num.setGeometry(QtCore.QRect(10, 350, 51, 41))
        self.four_num.setObjectName("four_num")

        self.six_num = QtWidgets.QPushButton(parent=self.centralwidget)
        self.six_num.setGeometry(QtCore.QRect(130, 350, 51, 41))
        self.six_num.setObjectName("six_num")

        self.eight_num = QtWidgets.QPushButton(parent=self.centralwidget)
        self.eight_num.setGeometry(QtCore.QRect(70, 300, 51, 41))
        self.eight_num.setObjectName("eight_num")

        self.seven_num = QtWidgets.QPushButton(parent=self.centralwidget)
        self.seven_num.setGeometry(QtCore.QRect(10, 300, 51, 41))
        self.seven_num.setObjectName("seven_num")

        self.nine_num = QtWidgets.QPushButton(parent=self.centralwidget)
        self.nine_num.setGeometry(QtCore.QRect(130, 300, 51, 41))
        self.nine_num.setObjectName("nine_num")

        self.mul_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.mul_button.setGeometry(QtCore.QRect(200, 400, 81, 81))
        self.mul_button.setObjectName("mul_button")

        self.add_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.add_button.setGeometry(QtCore.QRect(200, 310, 81, 81))
        self.add_button.setObjectName("add_button")

        self.sub_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.sub_button.setGeometry(QtCore.QRect(300, 310, 81, 81))
        self.sub_button.setObjectName("sub_button")

        self.div_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.div_button.setGeometry(QtCore.QRect(300, 400, 81, 81))
        self.div_button.setObjectName("div_button")

        self.open_par = QtWidgets.QPushButton(parent=self.centralwidget)
        self.open_par.setGeometry(QtCore.QRect(20, 250, 71, 41))
        self.open_par.setObjectName("open_par")

        self.close_par = QtWidgets.QPushButton(parent=self.centralwidget)
        self.close_par.setGeometry(QtCore.QRect(110, 250, 71, 41))
        self.close_par.setObjectName("close_par")

        self.caret_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.caret_button.setGeometry(QtCore.QRect(290, 250, 41, 41))
        self.caret_button.setObjectName("caret_button")

        self.pi_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pi_button.setGeometry(QtCore.QRect(200, 250, 71, 41))
        self.pi_button.setObjectName("pi_button")

        self.sqrt_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.sqrt_button.setGeometry(QtCore.QRect(340, 250, 41, 41))
        self.sqrt_button.setObjectName("sqrt_button")

        self.arcsin_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.arcsin_button.setGeometry(QtCore.QRect(20, 190, 71, 41))
        self.arcsin_button.setObjectName("arcsin_button")

        self.arccos_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.arccos_button.setGeometry(QtCore.QRect(110, 190, 71, 41))
        self.arccos_button.setObjectName("arccos_button")

        self.arctan_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.arctan_button.setGeometry(QtCore.QRect(200, 190, 71, 41))
        self.arctan_button.setObjectName("arctan_button")

        self.sin_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.sin_button.setGeometry(QtCore.QRect(20, 130, 71, 41))
        self.sin_button.setObjectName("sin_button")

        self.cos_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.cos_button.setGeometry(QtCore.QRect(110, 130, 71, 41))
        self.cos_button.setObjectName("cos_button")

        self.tan_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.tan_button.setGeometry(QtCore.QRect(200, 130, 71, 41))
        self.tan_button.setObjectName("tan_button")

        self.alt_functions = QtWidgets.QPushButton(parent=self.centralwidget)
        self.alt_functions.setGeometry(QtCore.QRect(290, 140, 91, 81))
        self.alt_functions.setObjectName("alt_functions")

        self.enter_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.enter_button.setGeometry(QtCore.QRect(290, 70, 91, 51))
        self.enter_button.setObjectName("enter_button")

        self.clear_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.clear_button.setGeometry(QtCore.QRect(290, 10, 91, 51))
        self.clear_button.setObjectName("clear_button")

        self.calc_display = QtWidgets.QLabel(parent=self.centralwidget)
        self.calc_display.setGeometry(QtCore.QRect(20, 20, 251, 81))

        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(False)
        font.setWeight(50)

        self.calc_display.setFont(font)
        self.calc_display.setAutoFillBackground(False)
        self.calc_display.setFrameShape(QtWidgets.QFrame.Shape.Panel)
        self.calc_display.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.calc_display.setLineWidth(2)
        self.calc_display.setObjectName("calc_display")

        MainCWindow.setCentralWidget(self.centralwidget)

        self.menubar = QtWidgets.QMenuBar(parent=MainCWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 401, 21))
        self.menubar.setObjectName("menubar")
        MainCWindow.setMenuBar(self.menubar)

        self.statusbar = QtWidgets.QStatusBar(parent=MainCWindow)
        self.statusbar.setObjectName("statusbar")
        MainCWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainCWindow)
        QtCore.QMetaObject.connectSlotsByName(MainCWindow)

        #General button stuff below.

        #numbers buttons below here.
        self.zero_num.clicked.connect(lambda: self.logic.append_expression("0"))
        self.one_num.clicked.connect(lambda: self.logic.append_expression("1"))
        self.two_num.clicked.connect(lambda: self.logic.append_expression("2"))
        self.three_num.clicked.connect(lambda: self.logic.append_expression("3"))
        self.four_num.clicked.connect(lambda: self.logic.append_expression("4"))
        self.five_num.clicked.connect(lambda: self.logic.append_expression("5"))
        self.six_num.clicked.connect(lambda: self.logic.append_expression("6"))
        self.seven_num.clicked.connect(lambda: self.logic.append_expression("7"))
        self.eight_num.clicked.connect(lambda: self.logic.append_expression("8"))
        self.nine_num.clicked.connect(lambda: self.logic.append_expression("9"))

        #arithmatic operators
        self.add_button.clicked.connect(lambda: self.logic.append_expression("+"))
        self.sub_button.clicked.connect(lambda: self.logic.append_expression("-"))
        self.mul_button.clicked.connect(lambda: self.logic.append_expression("ร"))
        self.div_button.clicked.connect(lambda: self.logic.append_expression("รท"))

        #Allows for trig and inverse trig inputs.
        self.sin_button.clicked.connect(lambda: self.logic.trig_function("sin"))
        self.cos_button.clicked.connect(lambda: self.logic.trig_function("cos"))
        self.tan_button.clicked.connect(lambda: self.logic.trig_function("tan"))
        self.arcsin_button.clicked.connect(lambda: self.logic.inverse_trig_function("arcsin"))
        self.arccos_button.clicked.connect(lambda: self.logic.inverse_trig_function("arccos"))
        self.arctan_button.clicked.connect(lambda: self.logic.inverse_trig_function("arctan"))

        # Allows for more advanced operation by inputting parenthesis.
        self.open_par.clicked.connect(lambda: self.logic.parenthesis("("))
        self.close_par.clicked.connect(lambda: self.logic.parenthesis(")"))

        # Provides square root button press for logic base.
        self.sqrt_button.clicked.connect(self.logic.square_root)

        # Provides power function button press for logic base.
        self.caret_button.clicked.connect(self.logic.power_function)

        # Provides pi math constant button press for logic base.
        self.pi_button.clicked.connect(self.logic.add_pi)

        #Provides evaluate button and clear button for logic.
        self.enter_button.clicked.connect(self.logic.evaluate_expression)
        self.clear_button.clicked.connect(self.logic.clear_expression)

        #Provides the decimal input.
        self.decimal_button.clicked.connect(self.logic.decimal)

        #Allows minus sign for negative number input.
        self.minus_button.clicked.connect(self.logic.minus_Sign)

    def retranslateUi(self, MainCWindow):
        """
        Function that provides the names for all menu buttons on calculator + screen display.
        Just changes the visible name of the button.
        :param MainCWindow:
        :return:
        """

        #Initializes the translation and changes window title.
        _translate = QtCore.QCoreApplication.translate
        MainCWindow.setWindowTitle(_translate("MainCWindow", "Calculator"))

        # Shows the main display window text, updated with a variable.
        self.calc_display.setText(_translate("MainCWindow", None))

        #Decimal point and minus sign.
        self.decimal_button.setText(_translate("MainCWindow", "."))
        self.minus_button.setText(_translate("MainCWindow", "(-)"))

        #Number pad on calculator.
        self.zero_num.setText(_translate("MainCWindow", "0"))
        self.two_num.setText(_translate("MainCWindow", "2"))
        self.one_num.setText(_translate("MainCWindow", "1"))
        self.three_num.setText(_translate("MainCWindow", "3"))
        self.five_num.setText(_translate("MainCWindow", "5"))
        self.four_num.setText(_translate("MainCWindow", "4"))
        self.six_num.setText(_translate("MainCWindow", "6"))
        self.eight_num.setText(_translate("MainCWindow", "8"))
        self.seven_num.setText(_translate("MainCWindow", "7"))
        self.nine_num.setText(_translate("MainCWindow", "9"))

        #Basic operators
        self.mul_button.setText(_translate("MainCWindow", "ร"))
        self.add_button.setText(_translate("MainCWindow", "+"))
        self.sub_button.setText(_translate("MainCWindow", "-"))
        self.div_button.setText(_translate("MainCWindow", "รท"))

        #more advanced operators and parenthesis
        self.open_par.setText(_translate("MainCWindow", "("))
        self.close_par.setText(_translate("MainCWindow", ")"))
        self.caret_button.setText(_translate("MainCWindow", "^"))
        self.pi_button.setText(_translate("MainCWindow", "ฯ"))
        self.sqrt_button.setText(_translate("MainCWindow", "โ"))

        #Trigonmetric + Inverse operators
        self.sin_button.setText(_translate("MainCWindow", "sin"))
        self.tan_button.setText(_translate("MainCWindow", "tan"))
        self.cos_button.setText(_translate("MainCWindow", "cos"))

        self.arcsin_button.setText(_translate("MainCWindow", "arcsin"))
        self.arccos_button.setText(_translate("MainCWindow", "arccos"))
        self.arctan_button.setText(_translate("MainCWindow", "arctan"))

        #LITERALLY DOESN'T DO ANYTHING AT ALL.
        #Was supposed to be a different function altogether, but I didn't wanna finish it.
        #It was left in because it was funny and fills up the space nicely.
        self.alt_functions.setText(_translate("MainCWindow", "Does Nothing!"))

        #Clear and enter buttons
        self.enter_button.setText(_translate("MainCWindow", "ENTER / ="))
        self.clear_button.setText(_translate("MainCWindow", "CLEAR"))

        # Connects logic and display handler function below.
        self.logic = CalcLogic()
        self.logic.update_display_signal.connect(self.update_display)

    #updates the display when signaled.
    def update_display(self, text: str) -> None:
        """
        Updates the calculator's display when told.
        """
        self.calc_display.setText(text)